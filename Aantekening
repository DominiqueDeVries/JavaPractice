// Inheritence: to inherit methods/attributes from one class to another.
// 2 categories: superclass (parent) and subclass (child).

class Vehicle {                                 // superclass

  protected String brand = "Ford";
  
  public void honk() {
    System.out.println("Tuut, tuut!");          // via object van class Car, call je brand en honk()
  }
}

class Car extends Vehicle {                     // subclass: door extends krijg je inheritance

  private String modelName = "Mustang";
  
  public static void main(String[] args) {
  
    Car objectFastCar = new Car();             // object van subclass Car

    myFastCar.honk();                          // Call de honk() method: tuut, tuut!
    
    System.out.println(objectFastCar.brand + " " + objectFastCar.modelName);        // Tuut, tuut!
                                                                                    // Ford Mustang
    }
}
                
// Inheritance met private

class Vehicle {

  private String brand = "Ford";                // is nu private, dus een error
  
  public void honk() {
     System.out.println("Tuut, tuut!");
  }
}

class Car extends Vehicle {

   private String modelName = "Mustang";
   
   public static void main(String[] args) {
   
      Car myFastCar = new Car();

      myFastCar.honk();
          System.out.println(myFastCar.brand + " " + myFastCar.modelName);
       }
}
//----------------------------------------------------------------------------------------------------------
 // Polymorpisme = vindt plaats als er meerdere classen zijn waarbij gebruikt wordt gemaakt van
 // inheritance tussen deze classen, dus vaker extends van superclass.
 // Methodes van de superclass worden op verschillende manieren geimplenteerd bij subclasses.



class Animal {
  public void animalSound() {
    System.out.println("The animal makes a sound");
  }
}

class Pig extends Animal {
  public void animalSound() {
    System.out.println("The pig says: wee wee");
  }
}

class Dog extends Animal {
  public void animalSound() {
    System.out.println("The dog says: bow wow");
  }
}

class Main {
  public static void main(String[] args) {
    Animal myAnimal = new Animal();  // Create a Animal object
    Animal myPig = new Pig();  // Create a Pig object
    Animal myDog = new Dog();  // Create a Dog object
    myAnimal.animalSound();
    myPig.animalSound();
    myDog.animalSound();
  }
}



















