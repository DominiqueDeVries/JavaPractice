/*Export a old file to a new file.

Hoe file lezen:
1. open file,
2. daarna lezen van file, regel voor regel. 

Om een file te maken en op te slaan om een computer (pad):
Windows = "C:\\Users\\MyName\\filename.txt"
Mac and Linux = "/Users/name/filename.txt"
*/

import java.io.File;         // import file class, file the openen.File class heeft verschillende () methods om te gebruiken zoals, createNewFile(), delete(), canRead(),
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;	// Scanner scan door elke regel van input.

public class Main {
  public static void main(String[] args) throws IOException {   // Gebruik IOException omdat er iets mis zou kunnen gaan.
  
  File file =new file("/Users/alexlee/Desktop/captmidn.txt");	// File opent oude file met naam: captmidn.txt".
  																// Het pad op pc is: /Users/alexlee/Desktop/captmidn.txt
  Scanner scan = new Scannner(file);
  
  String fileContent = "";		// Door "" heeft fileContent geen value. Bij fileContent = "hoi allemaal"; Zie je dit op de 1e 										// regel van nieuwe file.
  
  while(scan.hasNextLine()) {			// Als scan een line heeft doe dan het volgende (true),
  	fileContent = fileContent.concat(scan.nextLine() + "\n");
    }
    //Store content van oude file op String fileContent. Door concatenation kan je meerdere Strings samenvoegen --> concat().
    // Voeg elke line toe aan fileContent.
  
  FileWriter writer = new FileWriter("/Users/alexlee/Desktop/newfile.txt");
  										// FileWriter = om een nieuwe file te schrijven.
                                        // Locatie pc nieuw file. Deze komt op pc. Kan je terugvinden op naam: newfile.txt. Naam kan 											alles wezen.
  writer.write(fileContent);			// Gebruik write() om text te schrijven in fileContent.
  writer.close();						// Door file te closen kan er niks gebeuren met 										   											  fileContent.
    
  }
}
/*
// Examples

import java.io.File;      
import java.io.FileNotFoundException;
import java.util.Scanner;	

public class Main {
  public static void main(String[] args) throws FileNotFoundException { // Kan zijn dat hij de file niet kan vinden, daarom import 																			   FileNot... 
  
  File file =new file("/Users/alexlee/Desktop/captmidn.txt");	
  																
  Scanner scan = new Scannner(file);
  
  System.out.println(scan.nextLine());   // Laat alleen de 1e regel zien.

//------------------------------------------------------------

import java.io.FileWriter;   // Import the FileWriter class
import java.io.IOException;  // Import the IOException class to handle errors

public class WriteToFile {
  public static void main(String[] args) {
    try {
      FileWriter myWriter = new FileWriter("filename.txt");
      myWriter.write("Files in Java might be tricky, but it is fun enough!");
      myWriter.close();
      System.out.println("Successfully wrote to the file.");
    } catch (IOException e) {
      System.out.println("An error occurred.");
      e.printStackTrace();
    }
  }
}

//----------------------------------------------------------

import java.io.File;  // Import the File class
import java.io.FileNotFoundException;  // Import this class to handle errors
import java.util.Scanner; // Import the Scanner class to read text files

public class ReadFile {
  public static void main(String[] args) {
    try {
      File mijnObj = new File("filename.txt");  // Eerst object maken van File. In doce staat: Files in Java might be tricky, but it is fun enough!  
      Scanner scanObj = new Scanner(mijnObj);   // scanObj bevat de file.
      while (scanObj.hasNextLine()) {           // Als scanObj nog een woord heeft, dan continue de while loop.
        String data = scanObj.nextLine();     // Sla het op op een variable en println data variable.
        System.out.println(data);
      }
      myReader.close();
    } catch (FileNotFoundException e) {
      System.out.println("An error occurred.");
      e.printStackTrace();
    }                                       output: Files in Java might be tricky, but it is fun enough!
  }
}
*/
